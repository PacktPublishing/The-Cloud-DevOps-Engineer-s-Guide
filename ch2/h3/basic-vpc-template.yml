AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to provide a VPC with public and private subnets in 2 AZ with igw and Route Tables set.

Parameters:
  VPCName:
    Description: Name of the VPC
    Type: String
    Default: MyVPC #Change to your desired name

  OwnerTag:
    Description: Owner tag for all resources
    Type: String
    Default: Owner #Change to your desired owner

  AvailabilityZone1:
    Description: First Availability Zone
    Type: String
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
      - us-east-2a
      - us-east-2b
      - us-east-2c
      - us-west-1a
      - us-west-1c
      - us-west-2a
      - us-west-2b
      - us-west-2c
      - us-west-2d
    Default: us-east-2a

  AvailabilityZone2:
    Description: Second Availability Zone
    Type: String
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
      - us-east-2a
      - us-east-2b
      - us-east-2c
      - us-west-1a
      - us-west-1c
      - us-west-2a
      - us-west-2b
      - us-west-2c
      - us-west-2d
    Default: us-east-2b

Resources:
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - cloudformation.amazonaws.com
            Action: 
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: CloudFormationResourceCreationPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateVpc
                  - ec2:CreateSubnet
                  - ec2:CreateRouteTable
                  - ec2:CreateRoute
                  - ec2:AssociateRouteTable
                  - ec2:CreateInternetGateway
                  - ec2:AttachInternetGateway
                  - ec2:CreateTags
                Resource: "*"
                
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCName
        - Key: Owner
          Value: !Ref OwnerTag

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-igw"
        - Key: Owner
          Value: !Ref OwnerTag

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-1"
        - Key: Owner
          Value: !Ref OwnerTag

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-2"
        - Key: Owner
          Value: !Ref OwnerTag

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-1"
        - Key: Owner
          Value: !Ref OwnerTag

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-2"
        - Key: Owner
          Value: !Ref OwnerTag

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-Public-RT"
        - Key: Owner
          Value: !Ref OwnerTag

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-Private-RT"
        - Key: Owner
          Value: !Ref OwnerTag

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
